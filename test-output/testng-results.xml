<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="2" total="5" passed="3" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-08-17T04:19:41Z" name="Suite" finished-at="2022-08-17T04:20:31Z" duration-ms="50336">
    <groups>
    </groups>
    <test started-at="2022-08-17T04:19:41Z" name="Test" finished-at="2022-08-17T04:20:31Z" duration-ms="50336">
      <class name="scripts.Login_1">
        <test-method is-config="true" signature="generateReport()[pri:0, instance:scripts.Login_1@39a2bb97]" started-at="2022-08-17T04:19:41Z" name="generateReport" finished-at="2022-08-17T04:19:41Z" duration-ms="234" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:scripts.Login_1@39a2bb97]" started-at="2022-08-17T04:19:41Z" name="beforeClass" finished-at="2022-08-17T04:19:43Z" duration-ms="1586" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="methodName(java.lang.reflect.Method)[pri:0, instance:scripts.Login_1@39a2bb97]" started-at="2022-08-17T04:19:43Z" name="methodName" finished-at="2022-08-17T04:19:43Z" duration-ms="11" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void scripts.Login_1.Login() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodName -->
        <test-method signature="Login()[pri:0, instance:scripts.Login_1@39a2bb97]" started-at="2022-08-17T04:19:43Z" name="Login" finished-at="2022-08-17T04:19:50Z" duration-ms="7269" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:scripts.Login_1@39a2bb97]" started-at="2022-08-17T04:19:50Z" name="afterClass" finished-at="2022-08-17T04:19:51Z" duration-ms="526" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- scripts.Login_1 -->
      <class name="scripts.ContactPage_3">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:scripts.ContactPage_3@8c3619e]" started-at="2022-08-17T04:20:17Z" name="beforeClass" finished-at="2022-08-17T04:20:20Z" duration-ms="2832" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="Contact_Page()[pri:0, instance:scripts.ContactPage_3@8c3619e]" started-at="2022-08-17T04:20:20Z" name="Contact_Page" finished-at="2022-08-17T04:20:31Z" duration-ms="11749" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Contact_Page -->
        <test-method is-config="true" signature="methodName(java.lang.reflect.Method)[pri:0, instance:scripts.ContactPage_3@8c3619e]" started-at="2022-08-17T04:20:20Z" name="methodName" finished-at="2022-08-17T04:20:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void scripts.ContactPage_3.Contact_Page() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodName -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:scripts.ContactPage_3@8c3619e]" started-at="2022-08-17T04:20:31Z" name="afterClass" finished-at="2022-08-17T04:20:31Z" duration-ms="75" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- scripts.ContactPage_3 -->
      <class name="scripts.BookHotel_2">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:scripts.BookHotel_2@3ad2e17]" started-at="2022-08-17T04:19:51Z" name="beforeClass" finished-at="2022-08-17T04:19:52Z" duration-ms="1652" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="methodName(java.lang.reflect.Method)[pri:0, instance:scripts.BookHotel_2@3ad2e17]" started-at="2022-08-17T04:19:52Z" name="methodName" finished-at="2022-08-17T04:19:52Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void scripts.BookHotel_2.BookHotel() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodName -->
        <test-method signature="BookHotel()[pri:0, instance:scripts.BookHotel_2@3ad2e17]" started-at="2022-08-17T04:19:52Z" name="BookHotel" finished-at="2022-08-17T04:20:17Z" duration-ms="24182" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BookHotel -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:scripts.BookHotel_2@3ad2e17]" started-at="2022-08-17T04:20:17Z" name="afterClass" finished-at="2022-08-17T04:20:17Z" duration-ms="189" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- scripts.BookHotel_2 -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
